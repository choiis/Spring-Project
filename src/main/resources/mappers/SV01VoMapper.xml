<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	도메인마다 namespace 를 구현하고
	각각의 crud 에 대한 id 설정 후 쿼리 작성
-->

<mapper namespace="com.singer.mappers.SV01">		
		<insert id="insert"  parameterType="com.singer.domain.vo.sv.SV01Vo">
			insert into SV01 (seq, title, text, userid, regdate, multiselect)
			values (SEQ_SV01.NEXTVAL, #{title}, #{text}, #{userid}, #{regdate}, #{multiselect}) 
		</insert>
		
		<update id="update" parameterType="com.singer.domain.vo.sv.SV01Vo">
			update SV01 
			set title = #{title},
				text = #{text},
				multiselect = #{multiselect}
			where seq = #{seq}
		</update>
	
		<update id="click" parameterType="com.singer.domain.vo.sv.SV01Vo">
			update SV01
			set hit = (select hit 
				from SV01
				where seq = #{seq}
			) + 1
			where seq = #{seq}
		</update>
	
		<select id="selectOne" resultType="com.singer.domain.vo.sv.SV01Vo" parameterType="com.singer.domain.vo.sv.SV01Vo">
		select 
    		S1.seq as seq,
    		S1.title as title, 
   			S1.text as text, 
  			S1.userid as userid,
    		S1.regdate as regdate,
    		S1.hit as hit, 
			S1.good as good,
   			S1.multiselect as multiselect,
    		SL1.goodlog as goodlog,
    		SL1.hatelog  as hatelog,
   			(select 
				count(*) as votedYn
				from SV03 S3
			 where S1.seq = S3.seq
			 and userid = #{userid}
			 ) as votedYn
    		from SV01 S1
    		left outer join(
     			  select *
       			from SVG1
       			where seq = #{seq} and
      			 sessionid = #{userid}
   		 	) SL1
   		 	on (S1.seq = SL1.seq)
    	where S1.seq = #{seq}
		</select>
		
		<select id="checkUser" resultType="com.singer.domain.vo.sv.SV01Vo" parameterType="com.singer.domain.vo.sv.SV01Vo">
		select 
    		S1.seq as seq,
    		S1.userid as userid
    		from SV01 S1
		where S1.seq = #{seq}
		</select>
		
		<select id="select" resultType="com.singer.domain.vo.sv.SV01Vo"  parameterType="com.singer.domain.vo.sv.SV01Vo">
				<![CDATA[
			with tot as (
    			/*+ materialize */
    			select count(*) as totCnt /*+ INDEX_FFS(SV01 
    			PK_SV01)*/ from SV01 )  
    
			select S1.*,
				 (select count(*) 
        			from SV04 S
        			where S1.seq = S.seq01
        			and S.parents = 0
      			) as reply,
  				(select count(*) 
        			from SV03 S3
        			where S1.seq = S3.seq
      			) as votedCnt,
      			T.totCnt as totCnt
				 from (
					select /*+ index_desc(SV01 PK_SV01)*/
					rownum as rown,
					seq as seq,
					title as title, 
					text as text, 
					userid as userid,  
					regdate as regdate,
					hit as hit, 
					good as good
			 	from SV01 
			 	where rownum <= #{endRownum} 
				) S1 ,
    		tot T
    		where S1.rown >= #{startRownum} 
  			]]>
		</select>
		
		<select id="selectFind" resultType="com.singer.domain.vo.sv.SV01Vo"  parameterType="com.singer.domain.vo.sv.SV01Vo">
			select T.*,
				(select count(*) 
        			from SV04 s
        			where T.seq = s.seq01
        			and s.parents = 0
      			) as reply
      			from
  				(
					select 
					seq as seq,
					title as title, 
					text as text, 
					userid as userid,  
					regdate as regdate,
					hit as hit, 
					good as good
			 	from SV01 
  				 where 1 = 1
		 		 <if test="userid != null">
			 		and userid like #{userid} || '%'
			 	</if>
			 	<if test="title != null">
			 		and title like #{title} || '%'
			 	</if>
			 	order by regdate desc
  				) T
		</select>
		
		<delete id="delete" parameterType="com.singer.domain.vo.sv.SV01Vo">
			delete from SV01
			where seq = #{seq}
		</delete>
		
		<insert id="like" parameterType="com.singer.domain.vo.sv.SV01Vo">
			<selectKey  keyProperty="good"  resultType="java.lang.Integer" order="AFTER">
		 		select good from SV01 where seq = #{seq}
		 	</selectKey>
			update SV01 
			set good = (select good from SV01 where seq = #{seq}) + 1
			where seq = #{seq}
		</insert>
		
		<insert id="hate" parameterType="com.singer.domain.vo.sv.SV01Vo">
			<selectKey  keyProperty="good"  resultType="java.lang.Integer" order="AFTER">
		 		select good from SV01 where seq = #{seq}
		 	</selectKey>
			update SV01 
			set good = (select good from SV01 where seq = #{seq}) - 1
			where seq = #{seq}
		</insert>
		
		<update id="likelog" parameterType="com.singer.domain.vo.sv.SV01Vo">
			merge into SVG1 S1
				using dual
				on (S1.seq = #{seq}
				and S1.sessionid = #{sessionid})
			when matched then
				update set S1.datelog = #{datelog},
  					S1.goodlog = 'Y'
			when not matched then
				insert (S1.seq, S1.sessionid, S1.datelog, S1.goodlog ) values(#{seq}, #{sessionid}, #{datelog} , 'Y')
		</update>
		
		<update id="hatelog" parameterType="com.singer.domain.vo.sv.SV01Vo">
			merge into SVG1 S1
				using dual
				on (S1.seq = #{seq}
				and S1.sessionid = #{sessionid})
			when matched then
				update set S1.datelog = #{datelog},
  					S1.hatelog = 'Y'
			when not matched then
				insert (S1.seq, S1.sessionid, S1.datelog, S1.hatelog ) values(#{seq}, #{sessionid}, #{datelog} , 'Y')
		</update>
</mapper>