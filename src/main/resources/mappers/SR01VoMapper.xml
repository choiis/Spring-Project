<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	도메인마다 namespace 를 구현하고
	각각의 crud 에 대한 id 설정 후 쿼리 작성
-->

<mapper namespace="com.singer.mappers.SR01">	

		<insert id="insert"  parameterType="com.singer.vo.SR01Vo">
			<selectKey  keyProperty="seq"  resultType="java.lang.Integer" order="AFTER">
   			 SELECT SEQ_SR01.CURRVAL FROM DUAL
  			</selectKey>
			insert into SR01 (seq, title, text, userid, regdate, markertitle, mapx, mapy)
			values (SEQ_SR01.NEXTVAL, #{title}, #{text}, #{userid}, #{regdate}, #{markertitle}, #{mapx}, #{mapy}) 
		</insert>
		
		<update id="update" parameterType="com.singer.vo.SR01Vo">
			update SR01 
			set title = #{title},
				text = #{text},
				mapx = #{mapx},
				mapy = #{mapy},
				markertitle = #{markertitle}
			where seq = #{seq}
		</update>
	
		<update id="click" parameterType="com.singer.vo.SR01Vo">
			update SR01
			set hit = (select hit 
				from SR01
				where seq = #{seq}
			) + 1
			where seq = #{seq}
		</update>
	
		<select id="selectOne" resultType="com.singer.vo.SR01Vo" parameterType="com.singer.vo.SR01Vo">	
		select 
    		S1.seq as seq,
    		S1.title as title, 
   			S1.text as text, 
  			S1.userid as userid,
    		S1.regdate as regdate,
    		S1.hit as hit, 
			S1.good as good,
   			S1.markertitle as markertitle,
   			S1.mapx as mapx,
   			S1.mapy as mapy,
    		SL1.goodlog as goodlog,
    		SL1.hatelog as hatelog,
    		(select 
				count(*) as photocnt
				from SRP1 P1
			 where S1.seq = P1.seq
			 ) as photocnt,
   			(select 
				ROUND(AVG(S2.grade),2) as avggrade
				from SR02 S2
			 where S1.seq = S2.seq
			 ) as avggrade
    		from SR01 S1
    		left outer join(
     			  select *
       			from SRG1
       			where seq = #{seq} and
      			 sessionid = #{userid}
   		 	) SL1
   		 	on (S1.seq = SL1.seq)
    	where S1.seq = #{seq}
		</select>
		
		<select id="select" resultType="com.singer.vo.SR01Vo"  parameterType="com.singer.vo.SR01Vo">
				<![CDATA[
			select T.*,
				(select count(*) 
        			from SR03 s
        			where T.seq = s.seq01
        			and s.parents = 0
      			) as reply,
  				(select ROUND(AVG(S2.grade),2)
        			from SR02 S2
        			where T.seq = S2.seq
      			) as avggrade,
      			(select count(*) /*+ INDEX_FFS(SR01 PK_SR01)*/
  					from SR01 
  				) as totCnt
      			from
  				(select S1.*
				 from (
					select /*+ index_desc(SR01 PK_SR01)*/
					rownum as rown,
					seq as seq,
					title as title, 
					text as text, 
					userid as userid,  
					regdate as regdate,
					hit as hit, 
					good as good
			 	from SR01 
				) S1 where S1.rown between 
			#{startRownum} and #{endRownum}
  			) T
  			]]>
		</select>
		
		<delete id="delete" parameterType="com.singer.vo.SR01Vo">
			delete from SR01
			where seq = #{seq}
		</delete>
		
		<insert id="like" parameterType="com.singer.vo.SR01Vo">
			<selectKey  keyProperty="good"  resultType="java.lang.Integer" order="AFTER">
		 		select good from SR01 where seq = #{seq}
		 	</selectKey>
			update SR01 
			set good = (select good from SR01 where seq = #{seq}) + 1
			where seq = #{seq}
		</insert>
		
		<insert id="hate" parameterType="com.singer.vo.SR01Vo">
			<selectKey  keyProperty="good"  resultType="java.lang.Integer" order="AFTER">
		 		select good from SR01 where seq = #{seq}
		 	</selectKey>
			update SR01 
			set good = (select good from SR01 where seq = #{seq}) - 1
			where seq = #{seq}
		</insert>
		
		<update id="likelog" parameterType="com.singer.vo.SR01Vo">
			merge into SRG1 S1
				using dual
				on (S1.seq = #{seq}
				and S1.sessionid = #{sessionid})
			when matched then
				update set S1.datelog = #{datelog},
  					S1.goodlog = 'Y'
			when not matched then
				insert (S1.seq, S1.sessionid, S1.datelog, S1.goodlog ) values(#{seq}, #{sessionid}, #{datelog} , 'Y')
		</update>
		
		<update id="hatelog" parameterType="com.singer.vo.SR01Vo">
			merge into SRG1 S1
				using dual
				on (S1.seq = #{seq}
				and S1.sessionid = #{sessionid})
			when matched then
				update set S1.datelog = #{datelog},
  					S1.hatelog = 'Y'
			when not matched then
				insert (S1.seq, S1.sessionid, S1.datelog, S1.hatelog ) values(#{seq}, #{sessionid}, #{datelog} , 'Y')
		</update>
		
		<insert id="insertPhoto" parameterType="java.util.HashMap">
				insert into SRP1 values(#{seq}, #{idx}, #{regdate}, #{photo})
		</insert>
		
		<select id="selectPhoto" parameterType="com.singer.vo.SR01Vo" resultType="java.util.Map">
			select photo from SRP1 
				where seq = #{seq}
				and idx = #{idx}
		</select>
</mapper>