<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	도메인마다 namespace 를 구현하고
	각각의 crud 에 대한 id 설정 후 쿼리 작성
-->

<mapper namespace="com.singer.mappers.SF01">		
		<insert id="insert"  parameterType="com.singer.vo.SF01Vo">
			insert into SF01 (seq, title, text, userid, regdate, filename, ftpfilename)
			values (SEQ_SF01.NEXTVAL, #{title}, #{text}, #{userid}, #{regdate}, #{filename}, #{ftpfilename}) 
		</insert>
		
		<update id="update" parameterType="com.singer.vo.SF01Vo">
			update SF01 
			set title = #{title},
				text = #{text}
			where seq = #{seq}
		</update>
		
		<update id="like" parameterType="com.singer.vo.SF01Vo">
			update SF01 
			set good = (select good from SF01 where seq = #{seq}) + 1
			where seq = #{seq}
		</update>
		
		<update id="hate" parameterType="com.singer.vo.SF01Vo">
			update SF01 
			set good = (select good from SF01 where seq = #{seq}) - 1
			where seq = #{seq}
		</update>
		
		<update id="click" parameterType="com.singer.vo.SF01Vo">
			update SF01
			set hit = (select hit 
				from SF01
				where seq = #{seq}
			) + 1
			where seq = #{seq}
		</update>
		
		<select id="selectOne" resultType="com.singer.vo.SF01Vo" parameterType="com.singer.vo.SF01Vo">
			select 
				S1.seq as seq,
				S1.title as title, 
				S1.text as text, 
				S1.userid as userid,
				S1.regdate as regdate,
				S1.hit as hit, 
				S1.good as good,
				S1.filename as filename,
    			SL1.goodlog as goodlog,
    			SL1.hatelog  as hatelog
			 from SF01 S1
			 left outer join(
     			  select *
       			from SFG1
       			where seq = #{seq} and
      			 sessionid = #{sessionid}
   		 	) SL1
   		 	on (S1.seq = SL1.seq)
			 where S1.seq = #{seq}
		</select>
		
		<select id="select" resultType="com.singer.vo.SF01Vo"  parameterType="com.singer.vo.SF01Vo">
		<![CDATA[
			select T.*,
  				(select count(*) 
        			from SF02 s2
        			where T.seq = s2.seq01
        			and s2.parents = 0
      			) as reply,
      			(select count(*) /*+ INDEX_FFS(SF01 IDX_SF01_1)*/
  					from SF01 
  				) as totCnt
      			from
  				(select S1.*
				 from (
					select /*+ index_desc(SF01 IDX_SF01_1)*/
					rownum as rown,
					seq as seq,
					title as title, 
					text as text, 
					userid as userid,  
					regdate as regdate,
					hit as hit, 
					good as good
			 	from SF01 
				) S1 where S1.rown between 
			#{startRownum} and #{endRownum}
  			) T
  			]]>
		</select>
		
		<delete id="delete" parameterType="com.singer.vo.SF01Vo">
			delete from SF01
			where seq = #{seq}
		</delete>
		
		<select id="selectFile" parameterType="com.singer.vo.SF01Vo" resultType="com.singer.vo.SF01Vo">
			select 
				seq as seq,
				filename as filename,
				ftpfilename as ftpfilename
			 from SF01 
			where seq = #{seq}
		</select>
		
		<update id="likelog" parameterType="com.singer.vo.SF01Vo">
			merge into SFG1 S1
				using dual
				on (S1.seq = #{seq}
				and S1.sessionid = #{sessionid})
			when matched then
				update set S1.datelog = #{datelog},
  					S1.goodlog = 'Y'
			when not matched then
				insert (S1.seq, S1.sessionid, S1.datelog, S1.goodlog ) values(#{seq}, #{sessionid}, #{datelog} , 'Y')
		</update>
		
		<update id="hatelog" parameterType="com.singer.vo.SF01Vo">
			merge into SFG1 S1
				using dual
				on (S1.seq = #{seq}
				and S1.sessionid = #{sessionid})
			when matched then
				update set S1.datelog = #{datelog},
  					S1.hatelog = 'Y'
			when not matched then
				insert (S1.seq, S1.sessionid, S1.datelog, S1.hatelog ) values(#{seq}, #{sessionid}, #{datelog} , 'Y')
		</update>
</mapper>