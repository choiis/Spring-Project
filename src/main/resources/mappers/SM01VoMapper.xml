<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	도메인마다 namespace 를 구현하고
	각각의 crud 에 대한 id 설정 후 쿼리 작성
-->

<mapper namespace="com.singer.mappers.SM01">		

		<resultMap type="com.singer.vo.SM01Vo" id="SM01VoResult">
			<result column="userid" property="userid"/>
			<result column="username" property="username"/>
			<result column="passwd" property="passwd"/>
			<result column="brth" property="brth"/>
			<result column="regdate" property="regdate"/>
			<result column="email" property="email"/>
			<result column="grade" property="grade" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"/>
			<result column="usertype" property="usertype" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"/>
			<result column="infocode" property="infocode" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"/>
			<result column="pfnum" property="pfnum"/>
			<result column="pcnum" property="pcnum"/>
			<result column="pbnum" property="pbnum"/>
			<result column="totCnt" property="totCnt"/>
			
		</resultMap>
		
		<insert id="insert"  parameterType="com.singer.vo.SM01Vo">
			insert into SM01 (userid, passwd, username, brth, grade, regdate, email, usertype)
			values (#{userid}, #{passwd}, #{username}, #{brth}, #{grade, typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}, #{regdate}, #{email}, 4) 
		</insert>
		
		<update id="insertSMI1"  parameterType="com.singer.vo.SM01Vo">
			merge into SMI1 S1
				using dual
				on (S1.userid = #{userid}
				and S1.infocode = #{infocode, typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler})
			when matched then
				update set 
					S1.pfnum = #{pfnum},
  					S1.pcnum = #{pcnum},
  					S1.pbnum = #{pbnum},
  					S1.regdate = #{regdate}
			when not matched then
				insert (S1.userid, S1.infocode, S1.pfnum, S1.pcnum, S1.pbnum, S1.regdate)
				values (#{userid}, #{infocode, typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}, #{pfnum}, #{pcnum}, #{pbnum}, #{regdate}) 
		</update>
		
		<insert id="insertSME1"  parameterType="com.singer.vo.SM01Vo">
			insert into SME1 (userid, regdate, insertid)
			values (#{userid}, #{regdate}, #{insertid}) 
		</insert>
		
		<delete id="deleteSME1" parameterType="com.singer.vo.SM01Vo">
			delete from SME1
			where userid = #{userid}
		</delete>
		
		<update id="update" parameterType="com.singer.vo.SM01Vo">
		update SM01 
			set username = #{username},
				brth = #{brth},
				email = #{email}
			 <if test="passwd != null">
			 	, passwd = #{passwd}
			 </if>
		where userid  = #{userid}
		</update>
	
		<update id="updateUserType" parameterType="com.singer.vo.SM01Vo">
		update SM01 
			set usertype = #{usertype}
		where userid  = #{userid}
		</update>
	
		
		<select id="selectOne" resultMap="SM01VoResult" parameterType="com.singer.vo.SM01Vo">
			select 
				S.userid as userid,
				S.username as username, 
				S.brth as brth, 
				S.grade as grade, 
				S.regdate as regdate,
				S.email as email,
				S.usertype as usertype
			 from SM01 S
			 where S.userid = #{userid}
		</select>
		
		<select id="selectLogin" resultMap="SM01VoResult" parameterType="com.singer.vo.SM01Vo">
			select 
				S.userid as userid,
				S.username as username, 
				S.passwd as passwd,
				S.brth as brth, 
				S.grade as grade, 
				S.regdate as regdate,
				S.email as email,
				S.usertype as usertype
			 from SM01 S
			 where S.userid = #{userid}
		</select>
		
		<select id="selectSMI1" resultMap="SM01VoResult" parameterType="com.singer.vo.SM01Vo">
			select 
				S.userid as userid,
				S.infocode as infocode,
	 			S.pfnum as pfnum,
	 			S.pcnum as pcnum,
				S.pbnum as pbnum
			 from SMI1 S
			  where S.userid = #{userid}
		</select>
		
		<select id="select" resultMap="SM01VoResult" parameterType="com.singer.vo.SM01Vo">
		<![CDATA[
			select 
				/*+ ordered use_nl(T S1)*/
				T.*,
				S1.pfnum as pfnum,
	 			S1.pcnum as pcnum,
				S1.pbnum as pbnum
			from 
			(select S1.*
			 from (
			select 
				rownum as rown,
				T.userid as userid,
				T.username as username, 
				T.brth as brth, 
				T.grade as grade, 
				T.regdate as regdate,
				T.email as email,
				T.usertype as usertype,
				count(*) over() as totCnt
				from ( select * from SM01
				 order by regdate desc
				) T
			) S1 where S1.rown between 
			#{startRownum} + 1 and #{endRownum}
			) T
			 left outer join SMI1 S1
			 on T.userid = S1.userid
			 and S1.INFOCODE = 1
		]]>
		</select>
		
		<delete id="delete" parameterType="com.singer.vo.SM01Vo">
			delete from SM01
			where userid = #{userid}
		</delete>
		
		<insert id="insertImage" parameterType="java.util.HashMap">
				insert into SMP1 values(#{userid}, #{regdate}, #{photo})
		</insert>
		
		<select id="selectImage" parameterType="com.singer.vo.SM01Vo" resultType="java.util.Map">
			select photo from SMP1 where userid  = #{userid}
		</select>
		
		<update id="updateImage" parameterType="java.util.HashMap">
			update SMP1
				set regdate = #{regdate},
  				photo = #{photo}
  				where userid = #{userid}
		</update>
</mapper>